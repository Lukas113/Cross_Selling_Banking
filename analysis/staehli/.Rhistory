FROM client
JOIN disp ON client.client_id = disp.client_id
LEFT JOIN card ON disp.disp_id = card.disp_id
JOIN district ON client.district_id = district.a1")
return(data)
}
get_all_clients_join_region_ctype <- function(){
data <- dbGetQuery(con,"SELECT
CASE WHEN MOD(birth_number / 100, 100) > 50 THEN
'f'
ELSE
'm'
END as gender,
CASE WHEN MOD(birth_number / 100, 100) > 50 THEN
TO_DATE(CONCAT('19', CAST(birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD')
ELSE
TO_DATE(CONCAT('19', CAST(birth_number AS VARCHAR(6))), 'YYYYMMDD')
END as birthdate,
EXTRACT(YEAR FROM AGE('1998-12-31', CASE WHEN MOD(client.birth_number / 100, 100) > 50 THEN TO_DATE(CONCAT('19', CAST(client.birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD') ELSE TO_DATE(CONCAT('19', CAST(client.birth_number AS VARCHAR(6))), 'YYYYMMDD') END)) as age,
CASE
WHEN card.type IS NULL THEN 'NA'
END AS card_type
, district.a3 AS region
FROM client
JOIN disp ON client.client_id = disp.client_id
LEFT JOIN card ON disp.disp_id = card.disp_id
JOIN district ON client.district_id = district.a1")
return(data)
}
all_clients_join_region_ctype <- get_all_clients_join_region_ctype()
# MEnge aller Kunden zugeordnet zu den Distrikten
all_clients_join_region_ctype %>%
ggplot(aes(x = region, fill = type)) +
geom_bar(alpha = 1/2, position = "stack") +
labs(title = "Amount of Customers in Regions") +
coord_flip()
all_clients_join_region_ctype <- get_all_clients_join_region_ctype()
head(all_clients_join_region_ctype)
get_all_clients_join_region_ctype <- function(){
data <- dbGetQuery(con,"SELECT
CASE WHEN MOD(birth_number / 100, 100) > 50 THEN
'f'
ELSE
'm'
END as gender,
CASE WHEN MOD(birth_number / 100, 100) > 50 THEN
TO_DATE(CONCAT('19', CAST(birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD')
ELSE
TO_DATE(CONCAT('19', CAST(birth_number AS VARCHAR(6))), 'YYYYMMDD')
END as birthdate,
EXTRACT(YEAR FROM AGE('1998-12-31', CASE WHEN MOD(client.birth_number / 100, 100) > 50 THEN TO_DATE(CONCAT('19', CAST(client.birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD') ELSE TO_DATE(CONCAT('19', CAST(client.birth_number AS VARCHAR(6))), 'YYYYMMDD') END)) as age,
CASE
WHEN card.type IS NULL THEN 'NA'
END AS card_type
, district.a3 AS region
FROM client
JOIN disp ON client.client_id = disp.client_id
LEFT JOIN card ON disp.disp_id = card.disp_id
JOIN district ON client.district_id = district.a1")
return(data)
}
all_clients_join_region_ctype <- get_all_clients_join_region_ctype()
head(all_clients_join_region_ctype)
view(all_clients_join_region_ctype)
library("RPostgreSQL")
library(tidyverse)
source('../helpers/prepareData.R')
# define the database connection string
DB_HOST='server2053.cs.technik.fhnw.ch' # or 86.119.36.94 depending on the network
DB_PORT = 5432
DB_DBNAME = 'bank_db' # or 'warenkorb_db'
DB_USERNAME = 'db_user'
DB_PASSWORD = 'db_user_pw'
# load the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# connect to the database
con <- dbConnect(drv, dbname = DB_DBNAME,
host = DB_HOST, port = DB_PORT,
user = DB_USERNAME, password = DB_PASSWORD)
all_clients_join_region_ctype <- get_all_clients_join_region_ctype()
view(all_clients_join_region_ctype)
# MEnge aller Kunden zugeordnet zu den Distrikten
all_clients_join_region_ctype %>%
ggplot(aes(x = region, fill = card_type)) +
geom_bar(alpha = 1/2, position = "stack") +
labs(title = "Amount of Customers in Regions") +
coord_flip()
get_all_clients_join_region_ctype <- function(){
data <- dbGetQuery(con,"SELECT  client.client_id,
CASE WHEN MOD(client.birth_number / 100, 100) > 50 THEN
'f'
ELSE
'm'
END as gender,
CASE WHEN MOD(client.birth_number / 100, 100) > 50 THEN
TO_DATE(CONCAT('19', CAST(birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD')
ELSE
TO_DATE(CONCAT('19', CAST(birth_number AS VARCHAR(6))), 'YYYYMMDD')
END as birthdate,
EXTRACT(YEAR FROM AGE('1998-12-31', CASE WHEN MOD(client.birth_number / 100, 100) > 50 THEN TO_DATE(CONCAT('19', CAST(client.birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD') ELSE TO_DATE(CONCAT('19', CAST(client.birth_number AS VARCHAR(6))), 'YYYYMMDD') END)) as age,
card.type, district.a3 AS region
FROM client
JOIN disp ON client.client_id = disp.client_id
LEFT JOIN card ON disp.disp_id = card.disp_id
JOIN district ON client.district_id = district.a1
ORDER BY client_id")
return(data)
}
all_clients_join_region_ctype <- get_all_clients_join_region_ctype()
view(all_clients_join_region_ctype)
plot_all_types_age(NA)
plot_all_types_age("junior")
plot_all_types_age("gold")
plot_all_types_age("classic")
plot_all_types_age(" ")
plot_all_types_age(is.na())
plot_all_types_age(NULL)
plot_all_types_age(NA)
plot_all_types_age("junior"|"gold"|"classic")
plot_all_types_age()
plot_all_types_age("gold")
all_clients_join_region_ctype %>%
filter(type == type_card) %>%
ggplot(aes(x = age, fill = type)) +
geom_density(alpha = 1/2, fill = "lightblue") +
labs(title = "Alterverteilung Karte",type_card) +
geom_text(stat = "count", aes(label = ..count..))
# Altersveteilung nach Kartentyp
plot_all_types_age <- function(type_card){
all_clients_join_region_ctype %>%
filter(type == type_card) %>%
ggplot(aes(x = age, fill = type)) +
geom_density(alpha = 1/2, fill = "lightblue") +
labs(title = "Alterverteilung Karte",type_card) +
geom_text(stat = "count", aes(label = ..count..))
}
plot_all_types_age("classic")
# Altersveteilung nach Kartentyp
plot_all_types_age <- function(type_card){
all_clients_join_region_ctype %>%
filter(type == type_card) %>%
ggplot(aes(x = age, fill = type)) +
geom_density(alpha = 1/2, fill = "lightblue") +
labs(title = "Alterverteilung Karte",type_card)
}
plot_all_types_age("junior")
# MEnge aller Kunden zugeordnet zu den Distrikten
all_clients_join_region_ctype %>%
ggplot(aes(x = region, fill = type)) +
geom_bar(alpha = 1/2, position = "stack") +
labs(title = "Amount of Customers in Regions") +
coord_flip()
library("RPostgreSQL")
library(tidyverse)
get_all_clients <- function() {
data = dbGetQuery(con, "SELECT *,
CASE WHEN MOD(birth_number / 100, 100) > 50 THEN
'f'
ELSE
'm'
END as gender,
CASE WHEN MOD(birth_number / 100, 100) > 50 THEN
TO_DATE(CONCAT('19', CAST(birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD')
ELSE
TO_DATE(CONCAT('19', CAST(birth_number AS VARCHAR(6))), 'YYYYMMDD')
END as birthdate,
EXTRACT(YEAR FROM AGE('1998-12-31', CASE WHEN MOD(birth_number / 100, 100) > 50 THEN TO_DATE(CONCAT('19', CAST(birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD') ELSE TO_DATE(CONCAT('19', CAST(birth_number AS VARCHAR(6))), 'YYYYMMDD') END)) as age
FROM client")
return(data)
}
source('../helpers/prepareData.R')
# define the database connection string
DB_HOST='server2053.cs.technik.fhnw.ch' # or 86.119.36.94 depending on the network
DB_PORT = 5432
DB_DBNAME = 'bank_db' # or 'warenkorb_db'
DB_USERNAME = 'db_user'
DB_PASSWORD = 'db_user_pw'
# load the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# connect to the database
con <- dbConnect(drv, dbname = DB_DBNAME,
host = DB_HOST, port = DB_PORT,
user = DB_USERNAME, password = DB_PASSWORD)
# LAG Function zum Differenz der Spalten ausrechnen
difference_in_time <- permanent_orders %>%
group_by(orders_id) %>%
mutate(dif_in_days = date - lag(date))
head(difference_in_time)
average_time_p_orders <- mean(difference_in_time$dif_in_days, na.rm = TRUE) #Calculation of average time (30d)
head(accounts_loans)
#Most accounts didn't ever have loan
ggplot(accounts_loans, aes(x = payment_status)) + geom_bar(alpha = 3/4, position = "identity") + coord_flip()
#Check if null values not in loan table
accounts_loans %>%
filter(account_id == 0 | district_id == 0 | date_account_creation == 0) %>%
view()
# filter dataframe not empty values and rename date column
accounts_with_loans <- na.omit(accounts_loans) %>%
rename(date_of_loan = date)
view(accounts_with_loans)
ggplot(accounts_with_loans, aes(x = payment_status)) + geom_bar() + coord_flip()
ggplot(accounts_with_loans, aes(x = date_of_loan, y = loan_amount, color = payment_status)) +
geom_point(binwidth=15) + geom_smooth(method='lm',binwidth=15) +
scale_x_date(date_breaks = "year", date_labels = "%Y")
str(accounts_with_loans)
#calculate new row with count values for plotting
accounts_with_loans_count <- as.data.frame(transmute(accounts_with_loans,
loan_amount, loan_id)) %>% arrange(loan_id)
str(accounts_with_loans_count)
colMeans(accounts_with_loans_count[1], na.rm = FALSE)
library(DescTools)
ggplot(accounts_with_loans,aes(x = date_of_loan)) +
geom_histogram(binwidth=15, fill="#69b3a2", color="#e7ecef", alpha=0.9) +
labs(title = "Amount of loans at time") +
scale_x_date(date_breaks = "year", date_labels = "%Y")
# Packages
require(scales)
#Aesthtetics
color_fill  <- scale_fill_brewer(palette = "Pastel1")
scales_comma <- scale_x_continuous(labels = comma)
# Wie viele Loans sind bestehend fÃ¼r jeden Kartenbenutzer
ggplot(card_types_loans, aes(x = type, fill = loan_status)) + geom_bar(alpha = 0.8) + color_fill
# Welche Accounts hatten vor Ausstellung einer Karte bereits einen Loan und wie sah es bez. Kartentyp aus
# Remark zu plot:  Tag 0 entspricht Ausstellung der Karte
card_types_loans_timediff <- card_types_loans %>%
filter(loan_date < card_issued) %>%
mutate(time_diff_loan_card = abs(difftime(loan_date, card_issued))) %>% glimpse()
# Welche Accounts hatten vor Ausstellung einer Karte bereits einen Loan und wie sah es bez. Kartentyp aus
# Remark zu plot:  Tag 0 entspricht Ausstellung der Karte
ggplot(card_types_loans_timediff, aes(time_diff_loan_card, fill = type)) + geom_density(alpha = 0.8) + color_fill +
labs(title = "Date from loan to card")
# Wie sehen die Loan AMounts zu den einzelnen Kartentypen aus?
card_types_loans %>%
ggplot(aes(x = amount, fill = type)) + geom_density(alpha = 0.5) + color_fill +
labs( title = "Loan amount on card type") + scale_x_continuous(labels = comma)
# Monatliche Zahlungen nach Kartentype
card_types_loans %>%
ggplot(aes(x = payments, fill = type)) + geom_density(alpha = 0.5) + color_fill +
labs( title = "Monthly Payments on card_type") + scale_x_continuous(labels = comma)
# Wie sieht das Kreditvolumen im Bezug auf die Dauer aus?
card_types_loans %>%
ggplot(aes(x = duration, y = amount, fill = type)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = comma) + scale_x_continuous(breaks = card_types_loans$duration) + color_fill
#loan amount depending on amount
plot_1_loans_district <-  na.omit(filter(accounts_with_loans, between(district_id, 0, 40)))
plot_2_loans_district <- na.omit(filter(accounts_with_loans,
between(district_id,
41,max(accounts_with_loans$district_id))))
#Plot: where are the most loans comming from
ggplot(accounts_with_loans, aes(x = district_id)) +
geom_bar()
# Plot all districts with boxplot
ggplot(accounts_with_loans, aes(district_id, loan_amount, group = district_id)) +
geom_boxplot() +
geom_line(data = accounts_with_loans, aes(y = mean(loan_amount), x = district_id)) +
xlim(1,78) + ylim(0,600000) + scale_x_continuous(breaks = c(1:77))
# More accurate plots regarding to upper plot
ggplot(plot_1_loans_district, aes(x = district_id,
y = loan_amount, group = district_id)) +
geom_boxplot() + scale_x_continuous(breaks = plot_1_loans_district$district_id) +
labs(title = "Districts 1 to 40")
ggplot(plot_2_loans_district, aes(x = district_id,
y = loan_amount, group = district_id)) +
geom_boxplot() + scale_x_continuous(breaks = plot_2_loans_district$district_id) +
labs(title = "Districts 41 to 77")
library(ggridges)
glimpse(loans_demographic)
#Verteilung des Geschlechts
#Gleiche Anzahl Loans fÃ¼r Mann und Frau (Kartentypen sehen ebenfalls identisch aus)
loans_demographic %>%
ggplot(aes(x = gender, fill = card_type)) +
geom_bar(alpha = 3/4) +
scale_fill_brewer(palette = "Set2") +
labs(title = "Anz. M/F, welche einen Loan haben")
#Verteilung des Alters im Bezug auf Loans und Payment_status
summary(loans_demographic[3])
loans_demographic %>%
ggplot(aes(x = age, fill = loan_status)) +
geom_density(alpha = 1/3) +
labs(title = "Altersverteilung und Loanstatus")
#Ãesthetic Mappings
library(fmsb)
color_fill<- scale_fill_brewer(palette = "Set2")
all_clients <- get_all_clients()
head(all_clients)
#Verteilung des Alters und Geschlechts
all_clients %>%
ggplot(aes(x = age, fill = gender)) +
scale_fill +
geom_density(alpha = 1/3)
get_all_clients_join_region_ctype <- function(){
data <- dbGetQuery(con,"SELECT  client.client_id,
CASE WHEN MOD(client.birth_number / 100, 100) > 50 THEN
'f'
ELSE
'm'
END as gender,
CASE WHEN MOD(client.birth_number / 100, 100) > 50 THEN
TO_DATE(CONCAT('19', CAST(birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD')
ELSE
TO_DATE(CONCAT('19', CAST(birth_number AS VARCHAR(6))), 'YYYYMMDD')
END as birthdate,
EXTRACT(YEAR FROM AGE('1998-12-31', CASE WHEN MOD(client.birth_number / 100, 100) > 50 THEN TO_DATE(CONCAT('19', CAST(client.birth_number-5000 AS VARCHAR(6))), 'YYYYMMDD') ELSE TO_DATE(CONCAT('19', CAST(client.birth_number AS VARCHAR(6))), 'YYYYMMDD') END)) as age,
card.type, district.a3 AS region
FROM client
JOIN disp ON client.client_id = disp.client_id
LEFT JOIN card ON disp.disp_id = card.disp_id
JOIN district ON client.district_id = district.a1
ORDER BY client_id")
return(data)
}
#Ãesthetic Mappings
library(fmsb)
color_fill<- scale_fill_brewer(palette = "Set2")
all_clients <- get_all_clients()
head(all_clients)
#Verteilung des Alters und Geschlechts
all_clients %>%
ggplot(aes(x = age, fill = gender)) +
color_fill +
geom_density(alpha = 1/3)
#Verteilung des Geschlechts nach Wohndistrikte und nach Kartentypen
all_clients_join_region_ctype <- get_all_clients_join_region_ctype()
view(all_clients_join_region_ctype)
# MEnge aller Kunden zugeordnet zu den Distrikten
all_clients_join_region_ctype %>%
ggplot(aes(x = region, fill = type)) +
geom_bar(alpha = 1/2, position = "stack") +
labs(title = "Amount of Customers in Regions") +
coord_flip()
# Altersveteilung nach Kartentyp
plot_all_types_age <- function(type_card){
all_clients_join_region_ctype %>%
filter(type == type_card) %>%
ggplot(aes(x = age, fill = type)) +
geom_density(alpha = 1/2, fill = "lightblue") +
labs(title = "Alterverteilung Karte",type_card)
}
plot_all_types_age("junior")
plot_all_types_age("gold")
plot_all_types_age("classic")
#Alterverteilung in den Distrikten
#Loyality Score
plot_all_types_age(is.na())
plot_all_types_age("NA")
plot_all_types_age(NA)
filter(all_clients_join_region_ctype, card_type == NA)
filter(all_clients_join_region_ctype, card_type is.na())
filter(all_clients_join_region_ctype, is.na(card_type))
filter(all_clients_join_region_ctype, card_type == NA)
filter(all_clients_join_region_ctype, type == NA)
filter(all_clients_join_region_ctype, type is.na())
filter(all_clients_join_region_ctype,is.na(type))
# Altersveteilung nach Kartentyp
plot_all_types_age <- function(type_card){
all_clients_join_region_ctype %>%
filter(type type_card) %>%
# Altersveteilung nach Kartentyp
plot_all_types_age <- function(type_card){
all_clients_join_region_ctype %>%
filter(type type_card) %>%
filter(all_clients_join_region_ctype, is.na(type))
plot_all_types_age(is.na(type))
plot_all_types_age(is.na(all_clients_join_region_ctype$type))
filter(all_clients_join_region_ctype, is.na(type))
plot_all_types_age(is.na(all_clients_join_region_ctype$type))
#Alterverteilung in den Distrikten
plot_all_districts_age <- function(){
ggplot(all_clients_join_region_ctype, aes(x = age, fill = district)) +
geom_density(alpha = 1/2)
}
plot_all_districts_age()
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = district)) +
geom_density(alpha = 1/2)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = district)) +
geom_density(alpha = 1/2)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_grid(~region)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_grid(~region,rows = 2)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_grid(~region, cols = "3")
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_grid(~region, cols = 3)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_grid(~region, cols = vars(3))
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_grid(~region, cols = 3,1)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_grid(~region, cols = 2)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_grid(.~region, cols = 2)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_grid(~region)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, facets = c(2,3))
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, facets = c(2,2))
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, facets = c(2,3))
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, facets = c(3,2))
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, facets = 3)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, ncol = 2)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, nrow = 2)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, ncol= 2)
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, ncol= 2) + color_fill
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density_ridges(alpha = 1/2)
ggplot(all_clients_join_region_ctype, aes(x = age, y = region)) +
geom_density_ridges(alpha = 1/2)
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges(alpha = 1/2)
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges_gradient(alpha = 1/2)
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges_gradient(alpha = 1/2) + color_fill
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges_gradient(alpha = 1/4) + color_fill
geom_density_ridges
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges(alpha = 1/2)
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges(alpha = 1/2) + color_fill
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges(alpha = 1/2) + scale_fill_brewer(palette = "YlOrRd")
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges(alpha = 1/2) +
scale_fill_brewer(palette = "YlOrRd") +
scale_x_continuous(breaks = seq(0,90,10))
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, ncol= 2) +
color_fill
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, ncol= 2) +
color_fill +
scale_x_continuous(breaks = seq(0,90,10))
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges(alpha = 1/2) +
scale_fill_brewer(palette = "YlOrRd") +
scale_x_continuous(breaks = seq(0,90,10))
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges(alpha = 1/2) +
scale_fill_brewer(palette = "YlOrRd") +
scale_x_continuous(breaks = seq(0,90,10))
#Alterverteilung in den Distrikten
ggplot(all_clients_join_region_ctype, aes(x = age, fill = region)) +
geom_density(alpha = 1/2) +
facet_wrap(~region, ncol= 2) +
color_fill +
scale_x_continuous(breaks = seq(0,90,15))
summary(all_clients_join_region_ctype)
summary(all_clients_join_region_ctype$age)
ggplot(all_clients_join_region_ctype, aes(x = age, y = region, fill = region)) +
geom_density_ridges(alpha = 1/2) +
scale_fill_brewer(palette = "YlOrRd") +
scale_x_continuous(breaks = seq(0,90,10))
