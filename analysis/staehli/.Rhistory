WHEN trans.type = 'VYDAJ' THEN 	'withdrawal'
END AS transaction_type,
CASE
WHEN trans.operation = 'VYBER KARTOU' THEN 'credit card withdrawal'
WHEN trans.operation = 'VKLAD' THEN 'credit in cash'
WHEN trans.operation = 'PREVOD Z UCTU' THEN 'collection of other bank'
WHEN trans.operation = 'VYBER' THEN 'withdrawal in cash'
WHEN trans.operation = 'PREVOD NA UCET' THEN 'remittance to another bank'
END AS transaction_operation,
trans.amount, ROUND(trans.balance) AS balance_after_trans
FROM disp
LEFT JOIN trans ON disp.account_id = trans.account_id
ORDER BY trans.trans_id
LIMIT 1000")
str(disp_transactions)
disp_transactions <- disp_transactions %>% #convert dataframe to a tibble
as_tibble(disp_transactions)
disp_transactions <- disp_transactions %>% #convert dataframe to a tibble
as_tibble(disp_transactions)
str(disp_transactions)
head(disp_transactions)
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate_rows(date, sep = "-") %>%
head()
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate_rows(date, sep = "-") %>%
head()
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate_rows(date, sep = "-") %>%
head(trans_per_year)
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate_rows(date, sep = "-")
head(trans_per_year)
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate_rows(date, sep = "-",into = c("year", "month", "day"))
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate_rows(date, sep = "-",into = c("year", "month_day"))
separate_rows(date, sep = "-", into = c("year")
separate_rows(date, sep = "-", into = c("year")
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate_rows(date, sep = "-", into = c("year") )
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate_rows(date, sep = "-" )
head(trans_per_year)
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") )
head(trans_per_year)
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id, year, transaction_type, transaction_operation, amount)
head(trans_per_year)
ggplot(trans_per_year, aes(x = year)) + geom_bar()
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 3/4) +
scale_color_brewer(palette = "Set2")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
scale_color_brewer(palette = "Set2") + coord_flip()
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
scale_color_brewer(palette = "YlOrRd") + coord_flip()
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
scale_color_brewer(palette = "Greys") + coord_flip()
install.packages(weanderson)
install.packages(wesanderson)
install.packages("wesanderson")
library("wesanderson")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_manual(values = wes_palette(n = 7, name = "Zissou"))
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_manual(values = wes_palette(n = 6, name = "Zissou"))
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_manual(values = wes_palette(n = 5, name = "Zissou"))
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_manual(values = wes_palette(n = 5, name = "GrandBudapest"))
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_manual(values = wes_palette(n = 5, name = "Moonrise1"))
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() #+ scale_fill_manual(values = wes_palette(n = 5, name = "Moonrise1"))
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_manual(values = wes_palette(n = 6, name = "Moonrise1"))
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_brewer(palette = "Set2")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_brewer(palette = "Dark2")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_brewer(palette = "Dark1")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 1/2) +
coord_flip() + scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 3/4) +
coord_flip() + scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 3/4) +
coord_flip(position = "identity") + scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 3/4) +
coord_flip(dodge = "identity") + scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) + geom_bar(alpha = 3/4) +
coord_flip(position = "dodge") + scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, position = "dodge")) + geom_bar(alpha = 3/4) +
coord_flip(position = "dodge") + scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "identity") + coord_flip() +
scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(position = "identity") + coord_flip() +
scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 1/10,position = "identity") +
scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "identity") +
scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "YlOrRd")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "YlOrRd") + labs(title = "Amount of transactions per year")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "YlOrRd") + labs(title = "Amount of transactions per year") +
ylab("transactions")
library(RPostgreSQL)
library(tidyverse)
DB_HOST='server2053.cs.technik.fhnw.ch' # or 86.119.36.94 depending on the network
DB_PORT = 5432
DB_DBNAME = 'bank_db' # or 'warenkorb_db'
DB_USERNAME = 'db_user'
DB_PASSWORD = 'db_user_pw'
# load the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# connect to the database
con <- dbConnect(drv, dbname = DB_DBNAME,
host = DB_HOST, port = DB_PORT,
user = DB_USERNAME, password = DB_PASSWORD)
disp_transactions <- dbGetQuery(con,"SELECT disp.disp_id, disp.client_id, disp.account_id, disp.type, trans.trans_id, trans.date,
CASE
WHEN trans.type = 'PRIJEM' THEN 'credit'
WHEN trans.type = 'VYDAJ' THEN 	'withdrawal'
END AS transaction_type,
CASE
WHEN trans.operation = 'VYBER KARTOU' THEN 'credit card withdrawal'
WHEN trans.operation = 'VKLAD' THEN 'credit in cash'
WHEN trans.operation = 'PREVOD Z UCTU' THEN 'collection of other bank'
WHEN trans.operation = 'VYBER' THEN 'withdrawal in cash'
WHEN trans.operation = 'PREVOD NA UCET' THEN 'remittance to another bank'
END AS transaction_operation,
trans.amount, ROUND(trans.balance) AS balance_after_trans
FROM disp
LEFT JOIN trans ON disp.account_id = trans.account_id
ORDER BY trans.trans_id
")
head(disp_transactions)
library("wesanderson")
disp_transactions <- disp_transactions %>% #convert dataframe to a tibble
as_tibble(disp_transactions)
#Plot transactions per year
trans_per_year <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id, year, transaction_type, transaction_operation, amount)
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "YlOrRd") + labs(title = "Amount of transactions per year") +
ylab("transactions")
head(trans_per_year)
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") +  geom_smooth()
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") +  geom_freqpoly()
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
head(disp_transactions)
# Bargeldbezüge von Disponenten
trans_per_year_disponent <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id,type , year, transaction_type, transaction_operation) %>%
filter(type == "DISPONENT")
head(trans_per_year_disponent)
# Bargeldbezüge von Disponenten
trans_per_year_disponent <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id,type , year, transaction_type, transaction_operation) %>%
filter(type == "DISPONENT") %>% arrange(desc(year))
head(trans_per_year_disponent)
# Bargeldbezüge von Disponenten
trans_per_year_disponent <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id,type , year, transaction_type, transaction_operation) %>%
filter(type == "DISPONENT") %>% arrange(year)
head(trans_per_year_disponent)
ggplot(trans_per_year_disponent, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") + scale_fill_brewer(palette = "Set2") +
labs(title = "Amount of transactions of all disponents") + ylab("transactions")
ggplot(trans_per_year_disponent, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") + scale_fill_brewer(palette = "Set2") +
labs(title = "Amount of transactions of all disponents") + ylab("transactions")
library(RPostgreSQL)
library(tidyverse)
DB_HOST='server2053.cs.technik.fhnw.ch' # or 86.119.36.94 depending on the network
DB_PORT = 5432
DB_DBNAME = 'bank_db' # or 'warenkorb_db'
DB_USERNAME = 'db_user'
DB_PASSWORD = 'db_user_pw'
# load the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# connect to the database
con <- dbConnect(drv, dbname = DB_DBNAME,
host = DB_HOST, port = DB_PORT,
user = DB_USERNAME, password = DB_PASSWORD)
disp_transactions <- dbGetQuery(con,"SELECT disp.disp_id, disp.client_id, disp.account_id, disp.type, trans.trans_id, trans.date,
CASE
WHEN trans.type = 'PRIJEM' THEN 'credit'
WHEN trans.type = 'VYDAJ' THEN 	'withdrawal'
END AS transaction_type,
CASE
WHEN trans.operation = 'VYBER KARTOU' THEN 'credit card withdrawal'
WHEN trans.operation = 'VKLAD' THEN 'credit in cash'
WHEN trans.operation = 'PREVOD Z UCTU' THEN 'collection of other bank'
WHEN trans.operation = 'VYBER' THEN 'withdrawal in cash'
WHEN trans.operation = 'PREVOD NA UCET' THEN 'remittance to another bank'
END AS transaction_operation,
trans.amount, ROUND(trans.balance) AS balance_after_trans
FROM disp
LEFT JOIN trans ON disp.account_id = trans.account_id
ORDER BY trans.trans_id
")
head(disp_transactions)
library("wesanderson")
disp_transactions <- disp_transactions %>% #convert dataframe to a tibble
as_tibble(disp_transactions)
#Alle Transaktinen pro Jahr (Alle Inhabertypen)
trans_per_year <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id, year, transaction_type, transaction_operation)
ggplot(trans_per_year, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
# Bargeldbezüge von Disponenten
trans_per_year_disponent <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id,type , year, transaction_type, transaction_operation) %>%
filter(type == "DISPONENT") %>% arrange(year)
head(trans_per_year_disponent)
ggplot(trans_per_year_disponent, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") + scale_fill_brewer(palette = "Set2") +
labs(title = "Amount of transactions of all disponents") + ylab("transactions")
#Alle Transaktinen pro Jahr (Alle Inhabertypen)
trans_per_year <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id, type, year, transaction_type, transaction_operation)
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "identity") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, fill = type)) +
geom_bar(alpha = 3/4, position = "identity") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, fill = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, stack = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, jitter = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Set2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Dark2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, stack = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Dark2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Dark2") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Greys") + labs(title = "Amount of transactions per year") +
ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Greys") + labs(title = "Amount of transactions per year") +
ylab("transactions") + scale_y_continuous(breaks = range(0,300000, 50000))
library(RPostgreSQL)
library(tidyverse)
DB_HOST='server2053.cs.technik.fhnw.ch' # or 86.119.36.94 depending on the network
DB_PORT = 5432
DB_DBNAME = 'bank_db' # or 'warenkorb_db'
DB_USERNAME = 'db_user'
DB_PASSWORD = 'db_user_pw'
# load the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# connect to the database
con <- dbConnect(drv, dbname = DB_DBNAME,
host = DB_HOST, port = DB_PORT,
user = DB_USERNAME, password = DB_PASSWORD)
disp_transactions <- dbGetQuery(con,"SELECT disp.disp_id, disp.client_id, disp.account_id, disp.type, trans.trans_id, trans.date,
CASE
WHEN trans.type = 'PRIJEM' THEN 'credit'
WHEN trans.type = 'VYDAJ' THEN 	'withdrawal'
END AS transaction_type,
CASE
WHEN trans.operation = 'VYBER KARTOU' THEN 'credit card withdrawal'
WHEN trans.operation = 'VKLAD' THEN 'credit in cash'
WHEN trans.operation = 'PREVOD Z UCTU' THEN 'collection of other bank'
WHEN trans.operation = 'VYBER' THEN 'withdrawal in cash'
WHEN trans.operation = 'PREVOD NA UCET' THEN 'remittance to another bank'
END AS transaction_operation,
trans.amount, ROUND(trans.balance) AS balance_after_trans
FROM disp
LEFT JOIN trans ON disp.account_id = trans.account_id
ORDER BY trans.trans_id
")
head(disp_transactions)
disp_transactions <- disp_transactions %>% #convert dataframe to a tibble
as_tibble(disp_transactions)
#Alle Transaktinen pro Jahr (Alle Inhabertypen)
trans_per_year <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id, type, year, transaction_type, transaction_operation)
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Greys") + labs(title = "Amount of transactions per year") +
ylab("transactions")
# Bargeldbezüge von Disponenten
trans_per_year_disponent <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id,type , year, transaction_type, transaction_operation) %>%
filter(type == "DISPONENT") %>% arrange(year)
head(trans_per_year_disponent)
ggplot(trans_per_year_disponent, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") + scale_fill_brewer(palette = "Dark2") +
labs(title = "Amount of transactions of all disponents") + ylab("transactions")
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Greys") + labs(title = "Amount of transactions per year") +
ylab("transactions") + scale_y_continuous(breaks = 50000)
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Greys") + labs(title = "Amount of transactions per year") +
ylab("transactions") + scale_y_continuous(breaks = c(0,50000, 100000, 150000,200000))
library("RPostgreSQL")
library(tidyverse)
# define the database connection string
DB_HOST='server2053.cs.technik.fhnw.ch' # or 86.119.36.94 depending on the network
DB_PORT = 5432
DB_DBNAME = 'bank_db' # or 'warenkorb_db'
DB_USERNAME = 'db_user'
DB_PASSWORD = 'db_user_pw'
# load the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# connect to the database
con <- dbConnect(drv, dbname = DB_DBNAME,
host = DB_HOST, port = DB_PORT,
user = DB_USERNAME, password = DB_PASSWORD)
install.packages("zoo")
install.packages("hrbrthemes")
library("RPostgreSQL")
library(tidyverse)
# define the database connection string
DB_HOST='server2053.cs.technik.fhnw.ch' # or 86.119.36.94 depending on the network
DB_PORT = 5432
DB_DBNAME = 'bank_db' # or 'warenkorb_db'
DB_USERNAME = 'db_user'
DB_PASSWORD = 'db_user_pw'
# load the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# connect to the database
con <- dbConnect(drv, dbname = DB_DBNAME,
host = DB_HOST, port = DB_PORT,
user = DB_USERNAME, password = DB_PASSWORD)
library("RPostgreSQL")
library(tidyverse)
# define the database connection string
DB_HOST='server2053.cs.technik.fhnw.ch' # or 86.119.36.94 depending on the network
DB_PORT = 5432
DB_DBNAME = 'bank_db' # or 'warenkorb_db'
DB_USERNAME = 'db_user'
DB_PASSWORD = 'db_user_pw'
# load the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# connect to the database
con <- dbConnect(drv, dbname = DB_DBNAME,
host = DB_HOST, port = DB_PORT,
user = DB_USERNAME, password = DB_PASSWORD)
# LAG Function zum Differenz der Spalten ausrechnen
difference_in_time <- permanent_orders %>%
group_by(orders_id) %>%
mutate(dif_in_days = date - lag(date))
head(difference_in_time)
average_time_p_orders <- mean(difference_in_time$dif_in_days, na.rm = TRUE) #Calculation of average time (30d)
head(accounts_loans)
#Most accounts didn't ever have loan
ggplot(accounts_loans, aes(x = payment_status)) + geom_bar(alpha = 3/4, position = "identity") + coord_flip()
#Check if null values not in loan table
accounts_loans %>%
filter(account_id == 0 | district_id == 0 | date_account_creation == 0) %>%
view()
# filter dataframe not empty values and rename date column
accounts_with_loans <- na.omit(accounts_loans) %>%
rename(date_of_loan = date)
view(accounts_with_loans)
ggplot(accounts_with_loans, aes(x = payment_status)) + geom_bar() + coord_flip()
ggplot(accounts_with_loans, aes(x = date_of_loan, y = loan_amount, color = payment_status)) +
geom_point(binwidth=15) + geom_smooth(method='lm',binwidth=15) +
scale_x_date(date_breaks = "year", date_labels = "%Y")
str(accounts_with_loans)
#calculate new row with count values for plotting
accounts_with_loans_count <- as.data.frame(transmute(accounts_with_loans,
loan_amount, loan_id)) %>% arrange(loan_id)
str(accounts_with_loans_count)
colMeans(accounts_with_loans_count[1], na.rm = FALSE)
library(DescTools)
ggplot(accounts_with_loans,aes(x = date_of_loan)) +
geom_histogram(binwidth=15, fill="#69b3a2", color="#e7ecef", alpha=0.9) +
labs(title = "Amount of loans at time") +
scale_x_date(date_breaks = "year", date_labels = "%Y")
#loan amount depending on amount
plot_1_loans_district <-  na.omit(filter(accounts_with_loans, between(district_id, 0, 40)))
plot_2_loans_district <- na.omit(filter(accounts_with_loans,
between(district_id,
41,max(accounts_with_loans$district_id))))
#Plot: where are the most loans comming from
ggplot(accounts_with_loans, aes(x = district_id)) +
geom_bar()
# Plot all districts with boxplot
ggplot(accounts_with_loans, aes(district_id, loan_amount, group = district_id)) +
geom_boxplot() +
geom_line(data = accounts_with_loans, aes(y = mean(loan_amount), x = district_id)) +
xlim(1,78) + ylim(0,600000) + scale_x_continuous(breaks = c(1:77))
# More accurate plots regarding to upper plot
ggplot(plot_1_loans_district, aes(x = district_id,
y = loan_amount, group = district_id)) +
geom_boxplot() + scale_x_continuous(breaks = plot_1_loans_district$district_id) +
labs(title = "Districts 1 to 40")
ggplot(plot_2_loans_district, aes(x = district_id,
y = loan_amount, group = district_id)) +
geom_boxplot() + scale_x_continuous(breaks = plot_2_loans_district$district_id) +
labs(title = "Districts 41 to 77")
#Amount of cards in district
ggplot(client_card_districts, aes(x = district_id, color = card_type)) +
geom_freqpoly(binwidth = 1, alpha = 3/4) + labs(title = "Amount of all customers in districts" ) +
scale_x_continuous(breaks = 1:77) + coord_cartesian(xlim = 1:77, ylim = 1:100)  #Richtig skalieren!!
#Anzahl Karten runtergebrochen auf einen Kartennutzer
card_district_one_usr <- client_card_districts %>%
select(district_id, card_type, no_inhabitants) %>%
group_by(district_id, card_type, no_inhabitants) %>%
summarise(number_of_cards = n()) %>%
mutate(no_cards_per_inhabitant = round((number_of_cards / no_inhabitants)*1000, 3)) %>%
filter(card_type != FALSE) #unbekannte Zellenwerte card_type nicht miteinbez. #%>% view()
#Plot Karten aller User im Bezug auf einen Distrikt
ggplot(card_district_one_usr, aes(x = district_id, y = no_cards_per_inhabitant, color = card_type)) +
geom_line(alpha = 3/4) + scale_x_continuous(breaks= 1:77)+
labs(title = "Card_types per head") + xlab(label = "districts") +
coord_cartesian(xlim = 1:77, ylim = range(0,0.25,0.1)) #zoom in
head(disp_transactions)
disp_transactions <- disp_transactions %>% #convert dataframe to a tibble
as_tibble(disp_transactions)
#Alle Transaktinen pro Jahr (Alle Inhabertypen)
trans_per_year <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id, type, year, transaction_type, transaction_operation)
ggplot(trans_per_year, aes(x = year, fill = transaction_operation, color = type)) +
geom_bar(alpha = 3/4, position = "dodge") +
scale_fill_brewer(palette = "Greys") + labs(title = "Amount of transactions per year") +
ylab("transactions") + scale_y_continuous(breaks = c(0,50000, 100000, 150000,200000))
# Bargeldbezüge von Disponenten
trans_per_year_disponent <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id,type , year, transaction_type, transaction_operation) %>%
filter(type == "DISPONENT") %>% arrange(year)
head(trans_per_year_disponent)
ggplot(trans_per_year_disponent, aes(x = year, fill = transaction_operation)) +
geom_bar(alpha = 3/4, position = "dodge") + scale_fill_brewer(palette = "Set3") +
labs(title = "Amount of transactions of all disponents") + ylab("transactions")
# Bargeldbezüge von Disponenten
trans_per_year_disponent <- disp_transactions %>%
separate(date, sep = "-", into = c("year", "month", "day") ) %>%
transmute(trans_id,type , year, transaction_type, transaction_operation) %>%
filter(type == "DISPONENT") %>% arrange(year)
